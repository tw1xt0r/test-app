import type { InteropComputed } from "./interop";
export declare const globalVariables: {
    root: Map<string, {
        id: string;
        get: () => any;
        set: (value: Record<string, any>) => void;
        peek: () => any;
        unsubscribe: (subscription: () => void) => void;
    }>;
    universal: Map<string, {
        id: string;
        get: () => any;
        set: (value: Record<string, any>) => void;
        peek: () => any;
        unsubscribe: (subscription: () => void) => void;
    }>;
};
export declare const effectContext: import("react").Context<InteropComputed>;
export declare const InheritanceProvider: import("react").Provider<InteropComputed>;
export declare function createColorSchemeSignal(id: string): {
    id: string;
    get: () => any;
    set: (value: Record<string, any>) => void;
    peek: () => any;
    unsubscribe: (subscription: () => void) => void;
};
