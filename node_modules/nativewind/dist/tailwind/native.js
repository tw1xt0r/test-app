"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_1 = __importDefault(require("tailwindcss/plugin"));
const theme_1 = require("../theme");
const dark_mode_1 = require("./dark-mode");
const color_1 = require("./color");
const verify_1 = require("./verify");
const translate_1 = require("./translate");
const shadows_1 = require("./shadows");
const forceDark = (0, plugin_1.default)(function ({ config }) {
    config("safelist").push("dark");
});
const visibility = (0, plugin_1.default)(({ addUtilities }) => {
    addUtilities({
        ".visible": { opacity: 1 },
        ".invisible": { opacity: 0 },
    });
});
const platforms = (0, plugin_1.default)(function ({ addVariant }) {
    const nativePlatforms = ["android", "ios", "windows", "macos"];
    for (const platform of nativePlatforms) {
        addVariant(platform, `@media (display-mode: ${platform})`);
    }
    addVariant("native", nativePlatforms.map((platform) => `@media (display-mode: ${platform})`));
});
const preset = {
    content: [],
    theme: {
        extend: {
            fontFamily: {
                sans: (0, theme_1.platformSelect)({ android: "san-serif", ios: "'system font'" }),
                serif: (0, theme_1.platformSelect)({ android: "serif", ios: "Georgia" }),
                mono: (0, theme_1.platformSelect)({ android: "mono", ios: "'Courier New'" }),
            },
            boxShadow: {
                sm: "0 1px 1px rgb(0 0 0 / 0.05)",
                DEFAULT: "0 1px 2px rgb(0 0 0 / 0.1)",
                md: "0 4px 3px rgb(0 0 0 / 0.1)",
                lg: "0 10px 8px rgb(0 0 0 / 0.1)",
                xl: "0 20px 13px rgb(0 0 0 / 0.1)",
                "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
                none: "0 0 #0000",
            },
            translateX: ({ theme }) => ({
                ...theme("spacing"),
                "1/2": "50rnw",
                "1/3": "33.333333rnw",
                "2/3": "66.666667rnw",
                "1/4": "25rnw",
                "2/4": "50rnw",
                "3/4": "75rnw",
                full: "100rnw",
            }),
            translateY: ({ theme }) => ({
                ...theme("spacing"),
                "1/2": "50rnh",
                "1/3": "33.333333rnh",
                "2/3": "66.666667rnh",
                "1/4": "25rnh",
                "2/4": "50rnh",
                "3/4": "75rnh",
                full: "100rnh",
            }),
            borderWidth: {
                hairline: (0, theme_1.hairlineWidth)(),
            },
            letterSpacing: {
                tighter: "-0.5px",
                tight: "-0.25px",
                normal: "0px",
                wide: "0.25px",
                wider: "0.5px",
                widest: "1px",
            },
            elevation: {
                sm: "1.5",
                DEFAULT: "3",
                md: "6",
                lg: "7.5",
                xl: "12.5",
                "2xl": "25",
                none: "0",
            },
            transitionProperty: {
                DEFAULT: "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, perspective, rotate, rotateX, rotateY, rotateZ, scale, scaleX, scaleY, translateX, translateY, skewX, skewY, filter, backdrop-filter",
                all: "background-color, border-bottom-color, border-bottom-left-radius, border-bottom-right-radius, border-bottom-width, border-color, border-left-color, border-left-width, border-radius, border-right-color, border-right-width, border-top-color, border-top-width, border-width, color, fill, font-size, font-weight, gap, letter-spacing, line-height, margin, margin-bottom, margin-left, margin-right, margin-top, object-position, opacity, order, padding, padding-bottom, padding-left, padding-right, padding-top, rotate, scale, stroke, text-decoration, text-decoration-color, transform, perspective, rotate, rotateX, rotateY, rotateZ, scale, scaleX, scaleY, translateX, translateY, skewX, skewY, transform-origin, translate, vertical-align, visibility, word-spacing, z-index",
                transform: "transform, perspective, rotate, rotateX, rotateY, rotateZ, scale, scaleX, scaleY, translateX, translateY, skewX, skewY",
            },
        },
    },
    plugins: [
        color_1.color,
        dark_mode_1.darkModeAtRule,
        shadows_1.shadows,
        forceDark,
        platforms,
        translate_1.translateX,
        translate_1.translateY,
        visibility,
        verify_1.verify,
    ],
    corePlugins: {
        preflight: false,
        translate: false,
        boxShadow: false,
        visibility: false,
        textOpacity: false,
        divideOpacity: false,
        borderOpacity: false,
        backgroundOpacity: false,
        placeholderOpacity: false,
        ringOpacity: false,
    },
};
exports.default = preset;
//# sourceMappingURL=native.js.map